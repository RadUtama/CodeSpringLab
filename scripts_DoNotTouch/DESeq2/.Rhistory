design$age_treatment <- paste(design$age,design$treatment,sep='_')
design$age <-factor(design$age)
design$treatment <-factor(design$treatment)
design$age_treatment <-factor(design$age_treatment)
select<-c('young')
design<-subset(design,age %in% select)
count <- count[,row.names(design)]
View(design)
dds <- DESeqDataSetFromMatrix(countData = count,colData = design,design = ~ treatment+age)
View(design)
View(count)
dds <- DESeqDataSetFromMatrix(countData = count,colData = design,design = ~ treatment)
dds <- dds[keep,]
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
View(design)
dds$treatment <- relevel(dds$treatment, ref = "control")
View(design)
dds <- DESeq(dds,parallel=TRUE) # already include estimatesizefactor
normalized_counts <- counts(dds, normalized=TRUE)
normalized_counts<-as.data.frame(normalized_counts)
normalized_counts$DESCRIPTION <- 'na'
normalized_counts<-normalized_counts[,c(ncol(normalized_counts),1:ncol(normalized_counts)-1)]
write.table(normalized_counts, file="normalized_counts.txt", sep="\t", quote=F, col.names=NA)
View(normalized_counts)
resultsNames(dds) # lists the coefficients
res <- results(dds,name="treatment_treated_vs_control",parallel=TRUE)
resLFC <- lfcShrink(dds, coef="treatment_treated_vs_control", type="apeglm")
resOrdered <- resLFC[order(resLFC$pvalue),]
summary(resOrdered)
resOrdered <- as.data.frame(resOrdered)
resOrdered <- na.omit(resOrdered)
res_sig <- resOrdered[resOrdered$padj<0.05,]
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F)
write.table(resOrdered,file="DEG_treated_vs_control(ref).txt",sep="\t",quote=F)
View(res_sig)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,col.names = TRUE)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,col.names = FALSE)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,row.names = FALSE)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,row.names = TRUE)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,row.names = 1)
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F,row.names = c(1))
write.table(res_sig,file="DEG_fdr0.05_treated_vs_control(ref).txt",sep="\t",quote=F)
write.table(resOrdered,file="DEG_treated_vs_control(ref).txt",sep="\t",quote=F)
count <- read.delim("/Users/utama/Documents/CodeSpring/input/counts/count_matrix.txt",header=T,sep="",row.names = 1,check.names=FALSE)
View(count)
count <- read.delim("/Users/utama/Documents/CodeSpring/input/counts/count_matrix.txt",sep="",row.names = 1,check.names=FALSE)
View(count)
count <- read.delim("/Users/utama/Documents/CodeSpring/input/counts/count_matrix.txt",sep="",check.names=FALSE)
View(count)
count <- read.delim("/Users/utama/Documents/CodeSpring/input/counts/count_matrix.txt",sep="",row.names = 1,check.names=FALSE)
View(count)
outpath <- '/Users/utama/Documents/CodeSpring/output/DESeq2'
write.table(normalized_counts, file=path(outpath,"/normalized_counts.txt",sep=""), sep="\t", quote=F, col.names=NA)
write.table(normalized_counts, file=paste(outpath,"/normalized_counts.txt",sep=""), sep="\t", quote=F, col.names=NA)
write.table(res_sig,file=paste(outpath,"/DEG_fdr0.05_treated_vs_control(ref).txt",sep=""),sep="\t",quote=F)
write.table(resOrdered,file=paste(outpath,"/DEG_treated_vs_control(ref).txt",sep=""),sep="\t",quote=F)
vsdata <- vst(dds, blind=FALSE)
plotPCA(vsdata, intgroup=c("treatment","age"),returnData=TRUE) #using the DESEQ2 plotPCA fxn we can
plotPCA(vsdata, intgroup=c("treatment","age")) #using the DESEQ2 plotPCA fxn we can
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
plotPCA(vsdata, intgroup="treatment") #using the DESEQ2 plotPCA fxn we can
dev.off()
library("DESeq2")
library(ggplot2)
library(EnhancedVolcano)
library(limma)
library(sva)
library(rafalib)
outpath <- '/Users/utama/Documents/CodeSpring/output/DESeq2'
count <- read.delim("/Users/utama/Documents/CodeSpring/input/counts/count_matrix.txt",sep="",row.names = 1,check.names=FALSE)
design <- read.delim("/Users/utama/Documents/CodeSpring/input/design/design_matrix.txt",header=T,sep="",row.names = 1,check.names=FALSE)
design$age_treatment <- paste(design$age,design$treatment,sep='_')
design$age <-factor(design$age)
design$treatment <-factor(design$treatment)
design$age_treatment <-factor(design$age_treatment)
select<-c('young')
design<-subset(design,age %in% select)
count <- count[,row.names(design)]
dds <- DESeqDataSetFromMatrix(countData = count,colData = design,design = ~ treatment)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment") #using the DESEQ2 plotPCA fxn we can
ggplot(pca, aes(PC1, PC2, color=condition, shape=type)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pca, aes(PC1, PC2, color=condition, shape=type))
ggplot(pca, aes(PC1, PC2, color=treatment))
View(design)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment") #using the DESEQ2 plotPCA fxn we can
pca<-plotPCA(vsdata, intgroup="age_treatment") #using the DESEQ2 plotPCA fxn we can
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment") #using the DESEQ2 plotPCA fxn we can
pca
pca<-pca+geom_text(label=rownames(design))
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),position = "top")
pca<-pca+geom_text(label=rownames(design),color="black")
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black")
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black",nudge_x=0.25,nudge_y=0.25)
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black",nudge_x=0.5,nudge_y=0.5)
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=1)
pca
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5)
pca
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca<-pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=5)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=0.5)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=1)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=-1,nudge_y=0.5,size=2)
dev.off()
pdf(paste(outpath,'/pca_treated_vs_control(ref).pdf',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
dds$treatment <- relevel(dds$treatment, ref = "control")
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds,name="treatment_treated_vs_control")
resLFC <- lfcShrink(dds, coef="treatment_treated_vs_control", type="apeglm")
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue')
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue')
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue'
pCutoff = 10e-6,
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 10e-6,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0))
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 10e-6,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 10e-2,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 10e-7,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 0.1,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 1.0,
labSize = 2.0)
dev.off()
pdf(paste(outpath,'/volcano_treated_vs_control(ref).pdf',sep=""))
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
library("DESeq2")
library(ggplot2)
library(EnhancedVolcano)
#args = commandArgs(trailingOnly=TRUE)
#outpath <- args[3]
outpath <- '/Users/utama/Documents/CodeSpringLab/output'
count <- read.delim('/Users/utama/Documents/CodeSpringLab/input/counts/count_matrix.txt',sep="",row.names = 1,check.names=FALSE)
design <- read.delim('/Users/utama/Documents/CodeSpringLab/input/design/design_matrix.txt',header=T,sep="",row.names = 1,check.names=FALSE)
#count <- read.delim(args[1],sep="",row.names = 1,check.names=FALSE)
#design <- read.delim(args[2],header=T,sep="",row.names = 1,check.names=FALSE)
design$age_treatment <- paste(design$age,design$treatment,sep='_')
design$age <-factor(design$age)
design$treatment <-factor(design$treatment)
count <- count[,row.names(design)]
dds <- DESeqDataSetFromMatrix(countData = count,colData = design,design = ~ treatment)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""))
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""),res=1200)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""),res=100)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
#outpath <- args[3]
outpath <- '/Users/utama/Documents/CodeSpringLab/output/DESeq2'
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""),res=500)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""),res=300)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
png(paste(outpath,'/pca_treated_vs_control(ref).png',sep=""),units="in", width=5, height=5, res=300)
vsdata <- vst(dds, blind=FALSE)
pca<-plotPCA(vsdata, intgroup="treatment")
pca+geom_text(label=rownames(design),color="black",nudge_x=1,nudge_y=0.5,size=2)
dev.off()
dds$treatment <- relevel(dds$treatment, ref = "control")
dds <- DESeq(dds)
normalized_counts<-as.data.frame(counts(dds, normalized=TRUE))
normalized_counts$DESCRIPTION <- 'na'
normalized_counts<-normalized_counts[,c(ncol(normalized_counts),1:ncol(normalized_counts)-1)]
resultsNames(dds)
res <- results(dds,name="treatment_treated_vs_control")
resLFC <- lfcShrink(dds, coef="treatment_treated_vs_control", type="apeglm")
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=5, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=10, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=20, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 1.0,
labSize = 1.0)
dev.off()
png(paste(outpath,'/MAplot_treated_vs_control(ref).png',sep=""),units="in", width=5, height=5, res=300)
plotMA(resLFC, ylim=c(-2,2))
dev.off()
ibrary("DESeq2")
library("DESeq2")
library(ggplot2)
library(EnhancedVolcano)
#args = commandArgs(trailingOnly=TRUE)
#outpath <- args[3]
outpath <- '/Users/utama/Documents/CodeSpringLab/output'
#count <- read.delim(args[1],sep="",row.names = 1,check.names=FALSE)
#design <- read.delim(args[2],header=T,sep="",row.names = 1,check.names=FALSE)
count <- read.delim('/Users/utama/Documents/CodeSpringLab/input/counts/count_matrix.txt',sep="",row.names = 1,check.names=FALSE)
design <- read.delim('/Users/utama/Documents/CodeSpringLab/input/design/design_matrix.txt',header=T,sep="",row.names = 1,check.names=FALSE)
design$age_treatment <- paste(design$age,design$treatment,sep='_')
design$age <-factor(design$age)
design$treatment <-factor(design$treatment)
count <- count[,row.names(design)]
dds <- DESeqDataSetFromMatrix(countData = count,colData = design,design = ~ treatment)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds$treatment <- relevel(dds$treatment, ref = "control")
dds <- DESeq(dds)
normalized_counts<-as.data.frame(counts(dds, normalized=TRUE))
normalized_counts$DESCRIPTION <- 'na'
normalized_counts<-normalized_counts[,c(ncol(normalized_counts),1:ncol(normalized_counts)-1)]
resultsNames(dds)
res <- results(dds,name="treatment_treated_vs_control")
resLFC <- lfcShrink(dds, coef="treatment_treated_vs_control", type="apeglm")
View(resLFC)
rownames(resLFC)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
EnhancedVolcano(resLFC,
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
EnhancedVolcano(resLFC,
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-5,
FCcutoff = 1,
pointSize = 1.0)
EnhancedVolcano(resLFC,
x = 'log2FoldChange',
y = 'pvalue')
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue'
)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 5e-2,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 5e-2,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
dev.off()
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-4,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-4,
FCcutoff = 1,
pointSize = 1.0,
labSize = 5.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-4,
FCcutoff = 1,
pointSize = 1.0,
labSize = 1.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-4,
FCcutoff = 1,
pointSize = 1.0,
labSize = 3.0)
dev.off()
png(paste(outpath,'/volcano_treated_vs_control(ref).png',sep=""),units="in", width=7, height=5, res=300)
EnhancedVolcano(resLFC,
lab = rownames(resLFC),
x = 'log2FoldChange',
y = 'pvalue',
pCutoff = 1e-4,
FCcutoff = 1,
pointSize = 2.0,
labSize = 3.0)
dev.off()
